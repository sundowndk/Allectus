<script language="JavaScript" type="text/javascript">
	app.customers =
	{
		elements : new Array (),
						
		init : function ()
		{
			// Functions
			var set = 		function ()
							{
								refresh ();
							};
							
			var refresh =	function ()
							{
								var onDone =	function (result)
												{													
													app.customers.elements.customers.addItems (result);
												};
																									
								allectusLib.customer.list ({async: true, onDone: onDone});
							};
							
			var onChange =	function ()
							{
								if (app.customers.elements.customers.getItem ())
		 						{		 						 				
		 							app.customers.elements.edit.setAttribute ("disabled", false);
		 							app.customers.elements.destroy.setAttribute ("disabled", false);
		 						}
		 						else
		 						{
		 							app.customers.elements.edit.setAttribute ("disabled", true);
		 							app.customers.elements.destroy.setAttribute ("disabled", true);
		 						}
							};
			
			var onCreate =	function ()
							{
								var row = null;
								var onDone =	function (result)
												{												
													if (result != null)
													{
														if (row == null)
														{
															row = app.customers.elements.customers.addItem (result);													
														}
														else
														{
															app.customers.elements.customers.setItem (result, row);
														}													
													}
												};
							
								app.customers.create ({onDone: onDone});
							};
								
			var onEdit =	function ()
							{	
								var row = app.customers.elements.customers.getItemRow ();
								var onDone = 	function (result)
												{
													if (result != null)
													{
														app.customers.elements.customers.setItem (result, row);
													}
												};																				
												
								app.customers.edit ({current: allectusLib.customer.load (app.customers.elements.customers.getItem ().id), onDone: onDone});
							};
						
			var onDestroy = function ()
							{
								var onDone = 	function (result)
												{
													if (result )
													{												
														app.customers.elements.customers.removeItem ();
													}													
												};
												
								app.customers.destroy ({current: allectusLib.customer.load (app.customers.elements.customers.getItem ().id), onDone: onDone});
							};
		
			// Build UI
			app.customers.elements = SNDK.SUI.builder.construct ({URL: "xml/customers/section.xml", appendTo: "customers"});
		
			// Listview: 'customers'
			app.customers.elements.customers.setAttribute ("onChange", onChange);
			app.customers.elements.customers.setAttribute ("onDoubleClick",onEdit);
		
			// Buttons 'create', 'edit', 'destroy'
			app.customers.elements.create.setAttribute ("onClick", onCreate);
			app.customers.elements.edit.setAttribute ("onClick", onEdit);
			app.customers.elements.destroy.setAttribute ("onClick", onDestroy);
			
			// Fill forms
			set ();
		},
		
		create : function (attributes)
		{			
			var current = allectusLib.customer.create ();			
			current.name = "Unavngivet kunde";			
																															
			app.customers.edit ({current: current, onDone: attributes.onDone});		
			
			allectusLib.customer.save (current);
			
			if (attributes.onDone != null)
			{
				setTimeout (function () {attributes.onDone (current)});
			}
		},
					
		edit : function (attributes)
		{																
			// Elements
			var elements = new Array ();
						
			// Functions										
			var set =		function ()
							{							
								elements.window.getUIElement ("name").setAttribute ("value", attributes.current.name);								
								elements.window.getUIElement ("address1").setAttribute ("value", attributes.current.address1);
								elements.window.getUIElement ("address2").setAttribute ("value", attributes.current.address2);
								elements.window.getUIElement ("postcode").setAttribute ("value", attributes.current.postcode);
								elements.window.getUIElement ("city").setAttribute ("value", attributes.current.city);
								elements.window.getUIElement ("country").setAttribute ("value", attributes.current.country);
							
								attributes.checksum = SNDK.tools.arrayChecksum (attributes.current);
						
								onChange ();						
							};
						
			var get =		function ()
							{												
								attributes.current.name = elements.window.getUIElement ("name").getAttribute ("value");								
								attributes.current.address1 = elements.window.getUIElement ("address1").getAttribute ("value");
								attributes.current.address2 = elements.window.getUIElement ("address2").getAttribute ("value");
								attributes.current.postcode = elements.window.getUIElement ("postcode").getAttribute ("value");
								attributes.current.city = elements.window.getUIElement ("city").getAttribute ("value");
								attributes.current.country = elements.window.getUIElement ("country").getAttribute ("value");																							
							};
									
			var onSave =	function ()
							{
								// Collect forms.
								get ();
								
								// Update checksum.
								attributes.checksum = SNDK.tools.arrayChecksum (attributes.current);
								onChange ();					
								
								// Save Customer object to database.
								allectusLib.customer.save (attributes.current);
																																								
								// Done
								onDone (true);									
							};
						
			var onClose = 	function ()
							{								
								// Dispose modal window
								elements.window.dispose ();
								
								// Done
								onDone (false)
							};									
							
			var onDone = 	function (result)
							{
								if (attributes.onDone)
								{
									if (result)
									{
										setTimeout (function () {attributes.onDone (attributes.current)}, 1);
									}
									else
									{
										 setTimeout (function () {attributes.onDone (null)}, 1);
									}
								}
							};
									
			var onChange =	function ()
							{							
								get ();
							
								// Checksum & name not empty.
								if ((SNDK.tools.arrayChecksum (attributes.current) != attributes.checksum) && (elements.window.getUIElement ("name").getAttribute ("value") != ""))
								{									
									elements.window.getUIElement ("save").setAttribute ("disabled", false);
								}
								else
								{
									elements.window.getUIElement ("save").setAttribute ("disabled", true);
								}									
							};
																																				
			var init = 		function ()
							{
								if (!attributes)
									attributes = new Array ();
																									
								// Window 'window'			
								attributes.windowTitle = "Kunde : ["+ attributes.current.erpid +"]";	
								elements.window = new SNDK.SUI.modal.window ({title: attributes.windowTitle, UIURL: "xml/customers/edit.xml", width: "80%", height: "80%"});
																
								// Textbox 'name', 'address1', 'address2', 'postcode', 'city', 'country'
								elements.window.getUIElement ("name").setAttribute ("onChange", onChange);								
								elements.window.getUIElement ("address1").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("address2").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("postcode").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("city").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("country").setAttribute ("onChange", onChange);
									
								// Button 'save', 'close'
								elements.window.getUIElement ("save").setAttribute ("onClick", onSave);
								elements.window.getUIElement ("close").setAttribute ("onClick", onClose);
																																									
								// Fill forms.
								set ();
						
								// Open modal window.															
								elements.window.open ();															
						};
						
			// Initialize window
			init ();				
		},			
		
		destroy : function (attributes)
		{
			var onDone =	function (result)
							{
								if (result == 1)
								{
									var success = true;
								
									// Delete customer
									var result = allectusLib.customer.destroy (app.customers.elements.customers.getItem ().id);
																		
									// Check if any errors occured
									if (!result[0])
									{	
										var text = "";			
												
										// Customers with cases connected to them cannot be deleted
										if (result[1] == "00120")
										{
											text = "Kan ikke slette kunden da denne har tilknyttet sager. Slet sagerne og forsøg igen.";
										}			
																
										// Display error alert
										SNDK.SUI.modal.dialog.alert.show ({text: text, buttonLabel: "Ok"});
										
										success = false;
									}
									
									if (attributes.onDone != null)
									{
										setTimeout (function () {attributes.onDone (success)});
									}										
								}
							};
												
			// Show dialog
			SNDK.SUI.modal.dialog.confirm.show ({text: "Er du sikker på du vil slette denne kunde ?", buttonLabel1: "Ja", buttonLabel2: "Nej", onDone: onDone});		
		}
	}
</script>